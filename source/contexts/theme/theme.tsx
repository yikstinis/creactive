import {
  SPACING_BASE_LG,
  SPACING_BASE_MD,
  SPACING_BASE_SM,
  SPACING_BASE_X2L,
  SPACING_BASE_X2S,
  SPACING_BASE_X3L,
  SPACING_BASE_X4L,
  SPACING_BASE_X5L,
  SPACING_BASE_X6L,
  SPACING_BASE_X7L,
  SPACING_BASE_XL,
  SPACING_BASE_XS,
} from '@/constants'
import { createContext, useContext, useMemo } from 'react'
import {
  BORDER_RADIUS_BASE_LG,
  BORDER_RADIUS_BASE_MD,
  BORDER_RADIUS_BASE_SM,
  BORDER_RADIUS_BASE_XL,
  BORDER_RADIUS_BASE_XS,
  BORDER_WIDTH_BASE_LG,
  BORDER_WIDTH_BASE_MD,
  BORDER_WIDTH_BASE_SM,
  COLOR_BACKGROUND_BASE_100,
  COLOR_BACKGROUND_BASE_200,
  COLOR_BACKGROUND_BASE_300,
  COLOR_BACKGROUND_BASE_400,
  COLOR_BACKGROUND_BASE_500,
  COLOR_BACKGROUND_BASE_600,
  COLOR_BACKGROUND_BASE_700,
  COLOR_BACKGROUND_BASE_800,
  COLOR_BACKGROUND_BASE_900,
  COLOR_BORDER_BASE_100,
  COLOR_BORDER_BASE_200,
  COLOR_BORDER_BASE_300,
  COLOR_BORDER_BASE_400,
  COLOR_BORDER_BASE_500,
  COLOR_BORDER_BASE_600,
  COLOR_BORDER_BASE_700,
  COLOR_BORDER_BASE_800,
  COLOR_BORDER_BASE_900,
  COLOR_FOREGROUND_BASE_100,
  COLOR_FOREGROUND_BASE_200,
  COLOR_FOREGROUND_BASE_300,
  COLOR_FOREGROUND_BASE_400,
  COLOR_FOREGROUND_BASE_500,
  COLOR_FOREGROUND_BASE_600,
  COLOR_FOREGROUND_BASE_700,
  COLOR_FOREGROUND_BASE_800,
  COLOR_FOREGROUND_BASE_900,
  COLOR_FOREGROUND_INVERSE_100,
  COLOR_FOREGROUND_INVERSE_200,
  COLOR_FOREGROUND_INVERSE_300,
  COLOR_FOREGROUND_INVERSE_400,
  COLOR_FOREGROUND_INVERSE_500,
  COLOR_FOREGROUND_INVERSE_600,
  COLOR_FOREGROUND_INVERSE_700,
  COLOR_FOREGROUND_INVERSE_800,
  COLOR_FOREGROUND_INVERSE_900,
  FONT_FAMILY_BASE,
  FONT_SIZE_BASE_LG,
  FONT_SIZE_BASE_MD,
  FONT_SIZE_BASE_SM,
  FONT_SIZE_BASE_X2L,
  FONT_SIZE_BASE_X2S,
  FONT_SIZE_BASE_X3L,
  FONT_SIZE_BASE_X4L,
  FONT_SIZE_BASE_X5L,
  FONT_SIZE_BASE_XL,
  FONT_SIZE_BASE_XS,
  FONT_WEIGHT_BASE_BLACK,
  FONT_WEIGHT_BASE_BOLD,
  FONT_WEIGHT_BASE_EXTRABOLD,
  FONT_WEIGHT_BASE_EXTRALIGHT,
  FONT_WEIGHT_BASE_LIGHT,
  FONT_WEIGHT_BASE_MEDIUM,
  FONT_WEIGHT_BASE_REGULAR,
  FONT_WEIGHT_BASE_SEMIBOLD,
  FONT_WEIGHT_BASE_THIN,
  LINE_HEIGHT_BASE_LOOSE,
  LINE_HEIGHT_BASE_NONE,
  LINE_HEIGHT_BASE_NORMAL,
  LINE_HEIGHT_BASE_RELAXED,
  LINE_HEIGHT_BASE_SNUG,
  LINE_HEIGHT_BASE_TIGHT,
} from './constants'
import type {
  ThemeContextProviderComponent,
  ThemeContextValue,
} from './theme.types'

// We can use context even outside provider.
// This can be helpful for testing and storybook.
const ThemeContext = createContext<ThemeContextValue>({
  // Base background colors.
  colorBackgroundBase100: COLOR_BACKGROUND_BASE_100,
  colorBackgroundBase200: COLOR_BACKGROUND_BASE_200,
  colorBackgroundBase300: COLOR_BACKGROUND_BASE_300,
  colorBackgroundBase400: COLOR_BACKGROUND_BASE_400,
  colorBackgroundBase500: COLOR_BACKGROUND_BASE_500,
  colorBackgroundBase600: COLOR_BACKGROUND_BASE_600,
  colorBackgroundBase700: COLOR_BACKGROUND_BASE_700,
  colorBackgroundBase800: COLOR_BACKGROUND_BASE_800,
  colorBackgroundBase900: COLOR_BACKGROUND_BASE_900,
  // Base border colors.
  colorBorderBase100: COLOR_BORDER_BASE_100,
  colorBorderBase200: COLOR_BORDER_BASE_200,
  colorBorderBase300: COLOR_BORDER_BASE_300,
  colorBorderBase400: COLOR_BORDER_BASE_400,
  colorBorderBase500: COLOR_BORDER_BASE_500,
  colorBorderBase600: COLOR_BORDER_BASE_600,
  colorBorderBase700: COLOR_BORDER_BASE_700,
  colorBorderBase800: COLOR_BORDER_BASE_800,
  colorBorderBase900: COLOR_BORDER_BASE_900,
  // Base foreground colors.
  colorForegroundBase100: COLOR_FOREGROUND_BASE_100,
  colorForegroundBase200: COLOR_FOREGROUND_BASE_200,
  colorForegroundBase300: COLOR_FOREGROUND_BASE_300,
  colorForegroundBase400: COLOR_FOREGROUND_BASE_400,
  colorForegroundBase500: COLOR_FOREGROUND_BASE_500,
  colorForegroundBase600: COLOR_FOREGROUND_BASE_600,
  colorForegroundBase700: COLOR_FOREGROUND_BASE_700,
  colorForegroundBase800: COLOR_FOREGROUND_BASE_800,
  colorForegroundBase900: COLOR_FOREGROUND_BASE_900,
  // Inverse foreground colors.
  colorForegroundInverse100: COLOR_FOREGROUND_INVERSE_100,
  colorForegroundInverse200: COLOR_FOREGROUND_INVERSE_200,
  colorForegroundInverse300: COLOR_FOREGROUND_INVERSE_300,
  colorForegroundInverse400: COLOR_FOREGROUND_INVERSE_400,
  colorForegroundInverse500: COLOR_FOREGROUND_INVERSE_500,
  colorForegroundInverse600: COLOR_FOREGROUND_INVERSE_600,
  colorForegroundInverse700: COLOR_FOREGROUND_INVERSE_700,
  colorForegroundInverse800: COLOR_FOREGROUND_INVERSE_800,
  colorForegroundInverse900: COLOR_FOREGROUND_INVERSE_900,
  // Base font family.
  fontFamilyBase: FONT_FAMILY_BASE,
  // Base font weights.
  fontWeightBaseThin: FONT_WEIGHT_BASE_THIN,
  fontWeightBaseExtraLight: FONT_WEIGHT_BASE_EXTRALIGHT,
  fontWeightBaseLight: FONT_WEIGHT_BASE_LIGHT,
  fontWeightBaseRegular: FONT_WEIGHT_BASE_REGULAR,
  fontWeightBaseMedium: FONT_WEIGHT_BASE_MEDIUM,
  fontWeightBaseSemibold: FONT_WEIGHT_BASE_SEMIBOLD,
  fontWeightBaseBold: FONT_WEIGHT_BASE_BOLD,
  fontWeightBaseExtraBold: FONT_WEIGHT_BASE_EXTRABOLD,
  fontWeightBaseBlack: FONT_WEIGHT_BASE_BLACK,
  // Base font sizes.
  fontSizeBaseX2S: FONT_SIZE_BASE_X2S,
  fontSizeBaseXS: FONT_SIZE_BASE_XS,
  fontSizeBaseSM: FONT_SIZE_BASE_SM,
  fontSizeBaseMD: FONT_SIZE_BASE_MD,
  fontSizeBaseLG: FONT_SIZE_BASE_LG,
  fontSizeBaseXL: FONT_SIZE_BASE_XL,
  fontSizeBaseX2L: FONT_SIZE_BASE_X2L,
  fontSizeBaseX3L: FONT_SIZE_BASE_X3L,
  fontSizeBaseX4L: FONT_SIZE_BASE_X4L,
  fontSizeBaseX5L: FONT_SIZE_BASE_X5L,
  // Base line heights.
  lineHeightBaseNone: LINE_HEIGHT_BASE_NONE,
  lineHeightBaseTight: LINE_HEIGHT_BASE_TIGHT,
  lineHeightBaseSnug: LINE_HEIGHT_BASE_SNUG,
  lineHeightBaseNormal: LINE_HEIGHT_BASE_NORMAL,
  lineHeightBaseRelaxed: LINE_HEIGHT_BASE_RELAXED,
  lineHeightBaseLoose: LINE_HEIGHT_BASE_LOOSE,
  spacingBaseX2S: SPACING_BASE_X2S,
  spacingBaseXS: SPACING_BASE_XS,
  spacingBaseSM: SPACING_BASE_SM,
  spacingBaseMD: SPACING_BASE_MD,
  spacingBaseLG: SPACING_BASE_LG,
  spacingBaseXL: SPACING_BASE_XL,
  spacingBaseX2L: SPACING_BASE_X2L,
  spacingBaseX3L: SPACING_BASE_X3L,
  spacingBaseX4L: SPACING_BASE_X4L,
  spacingBaseX5L: SPACING_BASE_X5L,
  spacingBaseX6L: SPACING_BASE_X6L,
  spacingBaseX7L: SPACING_BASE_X7L,
  // Base border widths.
  borderWidthBaseSM: BORDER_WIDTH_BASE_SM,
  borderWidthBaseMD: BORDER_WIDTH_BASE_MD,
  borderWidthBaseLG: BORDER_WIDTH_BASE_LG,
  // Base border radiuses.
  borderRadiusBaseXS: BORDER_RADIUS_BASE_XS,
  borderRadiusBaseSM: BORDER_RADIUS_BASE_SM,
  borderRadiusBaseMD: BORDER_RADIUS_BASE_MD,
  borderRadiusBaseLG: BORDER_RADIUS_BASE_LG,
  borderRadiusBaseXL: BORDER_RADIUS_BASE_XL,
})

export const ThemeContextProvider: ThemeContextProviderComponent = ({
  // Base background colors.
  colorBackgroundBase100,
  colorBackgroundBase200,
  colorBackgroundBase300,
  colorBackgroundBase400,
  colorBackgroundBase500,
  colorBackgroundBase600,
  colorBackgroundBase700,
  colorBackgroundBase800,
  colorBackgroundBase900,
  // Base border colors.
  colorBorderBase100,
  colorBorderBase200,
  colorBorderBase300,
  colorBorderBase400,
  colorBorderBase500,
  colorBorderBase600,
  colorBorderBase700,
  colorBorderBase800,
  colorBorderBase900,
  // Base foreground colors.
  colorForegroundBase100,
  colorForegroundBase200,
  colorForegroundBase300,
  colorForegroundBase400,
  colorForegroundBase500,
  colorForegroundBase600,
  colorForegroundBase700,
  colorForegroundBase800,
  colorForegroundBase900,
  // Inverse foreground colors.
  colorForegroundInverse100,
  colorForegroundInverse200,
  colorForegroundInverse300,
  colorForegroundInverse400,
  colorForegroundInverse500,
  colorForegroundInverse600,
  colorForegroundInverse700,
  colorForegroundInverse800,
  colorForegroundInverse900,
  // Base font family.
  fontFamilyBase,
  // Base font weights.
  fontWeightBaseThin,
  fontWeightBaseExtraLight,
  fontWeightBaseLight,
  fontWeightBaseRegular,
  fontWeightBaseMedium,
  fontWeightBaseSemibold,
  fontWeightBaseBold,
  fontWeightBaseExtraBold,
  fontWeightBaseBlack,
  // Base font sizes.
  fontSizeBaseX2S,
  fontSizeBaseXS,
  fontSizeBaseSM,
  fontSizeBaseMD,
  fontSizeBaseLG,
  fontSizeBaseXL,
  fontSizeBaseX2L,
  fontSizeBaseX3L,
  fontSizeBaseX4L,
  fontSizeBaseX5L,
  // Base line heights.
  lineHeightBaseNone,
  lineHeightBaseTight,
  lineHeightBaseSnug,
  lineHeightBaseNormal,
  lineHeightBaseRelaxed,
  lineHeightBaseLoose,
  // Base spacing tokens.
  spacingBaseX2S,
  spacingBaseXS,
  spacingBaseSM,
  spacingBaseMD,
  spacingBaseLG,
  spacingBaseXL,
  spacingBaseX2L,
  spacingBaseX3L,
  spacingBaseX4L,
  spacingBaseX5L,
  spacingBaseX6L,
  spacingBaseX7L,
  // Base border widths.
  borderWidthBaseSM,
  borderWidthBaseMD,
  borderWidthBaseLG,
  // Base border radiuses.
  borderRadiusBaseXS,
  borderRadiusBaseSM,
  borderRadiusBaseMD,
  borderRadiusBaseLG,
  borderRadiusBaseXL,
  // And at least.. :)
  children,
}) => {
  // Memorizing context value.
  // Allows to avoid unnecessary re-renders.
  // Context consumers will re-render only if value changes.
  const value = useMemo(
    () => ({
      // Base background colors.
      colorBackgroundBase100:
        colorBackgroundBase100 ?? COLOR_BACKGROUND_BASE_100,
      colorBackgroundBase200:
        colorBackgroundBase200 ?? COLOR_BACKGROUND_BASE_200,
      colorBackgroundBase300:
        colorBackgroundBase300 ?? COLOR_BACKGROUND_BASE_300,
      colorBackgroundBase400:
        colorBackgroundBase400 ?? COLOR_BACKGROUND_BASE_400,
      colorBackgroundBase500:
        colorBackgroundBase500 ?? COLOR_BACKGROUND_BASE_500,
      colorBackgroundBase600:
        colorBackgroundBase600 ?? COLOR_BACKGROUND_BASE_600,
      colorBackgroundBase700:
        colorBackgroundBase700 ?? COLOR_BACKGROUND_BASE_700,
      colorBackgroundBase800:
        colorBackgroundBase800 ?? COLOR_BACKGROUND_BASE_800,
      colorBackgroundBase900:
        colorBackgroundBase900 ?? COLOR_BACKGROUND_BASE_900,
      // Base border colors.
      colorBorderBase100: colorBorderBase100 ?? COLOR_BORDER_BASE_100,
      colorBorderBase200: colorBorderBase200 ?? COLOR_BORDER_BASE_200,
      colorBorderBase300: colorBorderBase300 ?? COLOR_BORDER_BASE_300,
      colorBorderBase400: colorBorderBase400 ?? COLOR_BORDER_BASE_400,
      colorBorderBase500: colorBorderBase500 ?? COLOR_BORDER_BASE_500,
      colorBorderBase600: colorBorderBase600 ?? COLOR_BORDER_BASE_600,
      colorBorderBase700: colorBorderBase700 ?? COLOR_BORDER_BASE_700,
      colorBorderBase800: colorBorderBase800 ?? COLOR_BORDER_BASE_800,
      colorBorderBase900: colorBorderBase900 ?? COLOR_BORDER_BASE_900,
      // Base foreground colors.
      colorForegroundBase100:
        colorForegroundBase100 ?? COLOR_FOREGROUND_BASE_100,
      colorForegroundBase200:
        colorForegroundBase200 ?? COLOR_FOREGROUND_BASE_200,
      colorForegroundBase300:
        colorForegroundBase300 ?? COLOR_FOREGROUND_BASE_300,
      colorForegroundBase400:
        colorForegroundBase400 ?? COLOR_FOREGROUND_BASE_400,
      colorForegroundBase500:
        colorForegroundBase500 ?? COLOR_FOREGROUND_BASE_500,
      colorForegroundBase600:
        colorForegroundBase600 ?? COLOR_FOREGROUND_BASE_600,
      colorForegroundBase700:
        colorForegroundBase700 ?? COLOR_FOREGROUND_BASE_700,
      colorForegroundBase800:
        colorForegroundBase800 ?? COLOR_FOREGROUND_BASE_800,
      colorForegroundBase900:
        colorForegroundBase900 ?? COLOR_FOREGROUND_BASE_900,
      // Inverse foreground colors.
      colorForegroundInverse100:
        colorForegroundInverse100 ?? COLOR_FOREGROUND_INVERSE_100,
      colorForegroundInverse200:
        colorForegroundInverse200 ?? COLOR_FOREGROUND_INVERSE_200,
      colorForegroundInverse300:
        colorForegroundInverse300 ?? COLOR_FOREGROUND_INVERSE_300,
      colorForegroundInverse400:
        colorForegroundInverse400 ?? COLOR_FOREGROUND_INVERSE_400,
      colorForegroundInverse500:
        colorForegroundInverse500 ?? COLOR_FOREGROUND_INVERSE_500,
      colorForegroundInverse600:
        colorForegroundInverse600 ?? COLOR_FOREGROUND_INVERSE_600,
      colorForegroundInverse700:
        colorForegroundInverse700 ?? COLOR_FOREGROUND_INVERSE_700,
      colorForegroundInverse800:
        colorForegroundInverse800 ?? COLOR_FOREGROUND_INVERSE_800,
      colorForegroundInverse900:
        colorForegroundInverse900 ?? COLOR_FOREGROUND_INVERSE_900,
      // Base font family.
      fontFamilyBase: fontFamilyBase ?? FONT_FAMILY_BASE,
      // Base font weights.
      fontWeightBaseThin: fontWeightBaseThin ?? FONT_WEIGHT_BASE_THIN,
      fontWeightBaseExtraLight:
        fontWeightBaseExtraLight ?? FONT_WEIGHT_BASE_EXTRALIGHT,
      fontWeightBaseLight: fontWeightBaseLight ?? FONT_WEIGHT_BASE_LIGHT,
      fontWeightBaseRegular: fontWeightBaseRegular ?? FONT_WEIGHT_BASE_REGULAR,
      fontWeightBaseMedium: fontWeightBaseMedium ?? FONT_WEIGHT_BASE_MEDIUM,
      fontWeightBaseSemibold:
        fontWeightBaseSemibold ?? FONT_WEIGHT_BASE_SEMIBOLD,
      fontWeightBaseBold: fontWeightBaseBold ?? FONT_WEIGHT_BASE_BOLD,
      fontWeightBaseExtraBold:
        fontWeightBaseExtraBold ?? FONT_WEIGHT_BASE_EXTRABOLD,
      fontWeightBaseBlack: fontWeightBaseBlack ?? FONT_WEIGHT_BASE_BLACK,
      // Base font sizes.
      fontSizeBaseX2S: fontSizeBaseX2S ?? FONT_SIZE_BASE_X2S,
      fontSizeBaseXS: fontSizeBaseXS ?? FONT_SIZE_BASE_XS,
      fontSizeBaseSM: fontSizeBaseSM ?? FONT_SIZE_BASE_SM,
      fontSizeBaseMD: fontSizeBaseMD ?? FONT_SIZE_BASE_MD,
      fontSizeBaseLG: fontSizeBaseLG ?? FONT_SIZE_BASE_LG,
      fontSizeBaseXL: fontSizeBaseXL ?? FONT_SIZE_BASE_XL,
      fontSizeBaseX2L: fontSizeBaseX2L ?? FONT_SIZE_BASE_X2L,
      fontSizeBaseX3L: fontSizeBaseX3L ?? FONT_SIZE_BASE_X3L,
      fontSizeBaseX4L: fontSizeBaseX4L ?? FONT_SIZE_BASE_X4L,
      fontSizeBaseX5L: fontSizeBaseX5L ?? FONT_SIZE_BASE_X5L,
      // Base line heights.
      lineHeightBaseNone: lineHeightBaseNone ?? LINE_HEIGHT_BASE_NONE,
      lineHeightBaseTight: lineHeightBaseTight ?? LINE_HEIGHT_BASE_TIGHT,
      lineHeightBaseSnug: lineHeightBaseSnug ?? LINE_HEIGHT_BASE_SNUG,
      lineHeightBaseNormal: lineHeightBaseNormal ?? LINE_HEIGHT_BASE_NORMAL,
      lineHeightBaseRelaxed: lineHeightBaseRelaxed ?? LINE_HEIGHT_BASE_RELAXED,
      lineHeightBaseLoose: lineHeightBaseLoose ?? LINE_HEIGHT_BASE_LOOSE,
      // Base spacing tokens.
      spacingBaseX2S: spacingBaseX2S ?? SPACING_BASE_X2S,
      spacingBaseXS: spacingBaseXS ?? SPACING_BASE_XS,
      spacingBaseSM: spacingBaseSM ?? SPACING_BASE_SM,
      spacingBaseMD: spacingBaseMD ?? SPACING_BASE_MD,
      spacingBaseLG: spacingBaseLG ?? SPACING_BASE_LG,
      spacingBaseXL: spacingBaseXL ?? SPACING_BASE_XL,
      spacingBaseX2L: spacingBaseX2L ?? SPACING_BASE_X2L,
      spacingBaseX3L: spacingBaseX3L ?? SPACING_BASE_X3L,
      spacingBaseX4L: spacingBaseX4L ?? SPACING_BASE_X4L,
      spacingBaseX5L: spacingBaseX5L ?? SPACING_BASE_X5L,
      spacingBaseX6L: spacingBaseX6L ?? SPACING_BASE_X6L,
      spacingBaseX7L: spacingBaseX7L ?? SPACING_BASE_X7L,
      // Base border widths.
      borderWidthBaseSM: borderWidthBaseSM ?? BORDER_WIDTH_BASE_SM,
      borderWidthBaseMD: borderWidthBaseMD ?? BORDER_WIDTH_BASE_MD,
      borderWidthBaseLG: borderWidthBaseLG ?? BORDER_WIDTH_BASE_LG,
      // Base border radiuses.
      borderRadiusBaseXS: borderRadiusBaseXS ?? BORDER_RADIUS_BASE_XS,
      borderRadiusBaseSM: borderRadiusBaseSM ?? BORDER_RADIUS_BASE_SM,
      borderRadiusBaseMD: borderRadiusBaseMD ?? BORDER_RADIUS_BASE_MD,
      borderRadiusBaseLG: borderRadiusBaseLG ?? BORDER_RADIUS_BASE_LG,
      borderRadiusBaseXL: borderRadiusBaseXL ?? BORDER_RADIUS_BASE_XL,
    }),
    [
      // Base background colors.
      colorBackgroundBase100,
      colorBackgroundBase200,
      colorBackgroundBase300,
      colorBackgroundBase400,
      colorBackgroundBase500,
      colorBackgroundBase600,
      colorBackgroundBase700,
      colorBackgroundBase800,
      colorBackgroundBase900,
      // Base border colors.
      colorBorderBase100,
      colorBorderBase200,
      colorBorderBase300,
      colorBorderBase400,
      colorBorderBase500,
      colorBorderBase600,
      colorBorderBase700,
      colorBorderBase800,
      colorBorderBase900,
      // Base foreground colors.
      colorForegroundBase100,
      colorForegroundBase200,
      colorForegroundBase300,
      colorForegroundBase400,
      colorForegroundBase500,
      colorForegroundBase600,
      colorForegroundBase700,
      colorForegroundBase800,
      colorForegroundBase900,
      // Inverse foreground colors.
      colorForegroundInverse100,
      colorForegroundInverse200,
      colorForegroundInverse300,
      colorForegroundInverse400,
      colorForegroundInverse500,
      colorForegroundInverse600,
      colorForegroundInverse700,
      colorForegroundInverse800,
      colorForegroundInverse900,
      // Base font family.
      fontFamilyBase,
      // Base font weights.
      fontWeightBaseThin,
      fontWeightBaseExtraLight,
      fontWeightBaseLight,
      fontWeightBaseRegular,
      fontWeightBaseMedium,
      fontWeightBaseSemibold,
      fontWeightBaseBold,
      fontWeightBaseExtraBold,
      fontWeightBaseBlack,
      // Base font sizes.
      fontSizeBaseX2S,
      fontSizeBaseXS,
      fontSizeBaseSM,
      fontSizeBaseMD,
      fontSizeBaseLG,
      fontSizeBaseXL,
      fontSizeBaseX2L,
      fontSizeBaseX3L,
      fontSizeBaseX4L,
      fontSizeBaseX5L,
      // Base line heights.
      lineHeightBaseNone,
      lineHeightBaseTight,
      lineHeightBaseSnug,
      lineHeightBaseNormal,
      lineHeightBaseRelaxed,
      lineHeightBaseLoose,
      spacingBaseX2S,
      spacingBaseXS,
      spacingBaseSM,
      spacingBaseMD,
      spacingBaseLG,
      spacingBaseXL,
      spacingBaseX2L,
      spacingBaseX3L,
      spacingBaseX4L,
      spacingBaseX5L,
      spacingBaseX6L,
      spacingBaseX7L,
      // Base border widths.
      borderWidthBaseSM,
      borderWidthBaseMD,
      borderWidthBaseLG,
      // Base border radiuses.
      borderRadiusBaseXS,
      borderRadiusBaseSM,
      borderRadiusBaseMD,
      borderRadiusBaseLG,
      borderRadiusBaseXL,
    ]
  )
  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>
}
export const useThemeContext = () => useContext(ThemeContext)
